<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onsaem.web.chal.mapper.ChalMapper">
	<sql id="condition">
	 <where>
		<if test="subClass">
				 SUB_CLASS LIKE '%' || #{subClass} || '%'
			</if>
			<if test="ngoName">
				AND NGO_NAME = #{ngoName}
			</if>
		</where>
	</sql>
	
	<sql id="condition2">
		<if test="chalName">
				 AND CHAL_NAME LIKE '%' || #{chalName} || '%'
		</if>
	</sql>
	
	<!-- 챌리저스 전체조회 -->
	<select id="getChalAll" resultType="ChalVO" parameterType="ChalVO">
		SELECT * FROM (SELECT ROWNUM RN, A.* FROM( 
		SELECT  C.CHAL_ID,
				C.CLASSES, 
				C.SUB_CLASS, 
				C.CHAL_NAME, 
				C.START_DATE, 
				C.END_DATE,
				M.FILE_ROUTE, 
				M.MEDIA_NAME
		  FROM CHALLENGES C 
		  JOIN MEDIA M
		    ON C.CHAL_ID = M.GROUP_ID
         WHERE M.SUB_GROUP = '썸네일'
         <include refid="condition2"/>
		 ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>

	<!-- 챌리저스 기부처 별전체조회 -->
	<select id="getChalNgoAll" resultType="ChalVO"
		parameterType="ChalVO">
		 SELECT * FROM (SELECT ROWNUM RN, A.* FROM( SELECT C.CHAL_ID,
		C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE,
		M.FILE_ROUTE, M.MEDIA_NAME
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE M.SUB_GROUP = '썸네일'
        AND C.NGO_NAME=#{ngoName}
		ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>

	<!-- 챌리저스 팀전 별전체조회 -->
	<select id="getChalTeamAll" resultType="ChalVO" parameterType="ChalVO">
		 SELECT * FROM (SELECT ROWNUM RN, A.* FROM( SELECT C.CHAL_ID,
		C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE,
		M.FILE_ROUTE, M.MEDIA_NAME
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE C.SUB_CLASS = #{subClass}
		ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>
	
	<!-- 마이페이지용 - 현재 진행 중인거 모두 리스트 뽑기 , 회원 권한 -일반회원 -->
	<select id="myCurentChal" resultType="ChalVO" >
		SELECT C.CHAL_ID , C.SUB_CLASS, C.FREQUENCY, C.MEMBER_ID, C.CHAL_NAME, C.START_DATE, C.END_DATE, (C.END_DATE - CURRENT_DATE+1) DDAY
            , (SELECT COUNT(*)
                FROM PROOFS P
                WHERE CHAL_ID = C.CHAL_ID
                AND PROOF_WRITER = P.PARTICIPANT_ID 
                AND  INSTR( C.FREQUENCY,  TO_CHAR(WRITE_DATE, 'DY')) >0
                AND  P.WRITE_DATE = CURRENT_DATE) DAY
           ,(SELECT COUNT(*)
             FROM PROOFS P
             WHERE CHAL_ID = C.CHAL_ID
            AND PROOF_WRITER = P.PARTICIPANT_ID 
            AND  INSTR( C.FREQUENCY,  TO_CHAR(CURRENT_DATE, 'DY')) >0) CHECKDATE 
	       FROM CHALLENGES C JOIN PARTICIPANTS P
	      ON C.CHAL_ID = P.CHAL_ID
	      WHERE P.PARTICIPANT_ID = #{participantId}
         AND CURRENT_DATE BETWEEN C.START_DATE AND C.END_DATE
		
	</select>
	
	<select id="myBeforeChal" resultType="ChalVO" parameterType="ChalVO">
		SELECT C.CHAL_ID, C.SUB_CLASS, C.FREQUENCY, C.MEMBER_ID
						, C.CHAL_NAME, C.START_DATE, C.END_DATE
                ,P.PRIVATE_DONATE, Y.PAYMENT_ID, Y.PAYMENT_METHOD, ( C.START_DATE - CURRENT_DATE +1) dday
		FROM CHALLENGES C JOIN PARTICIPANTS P
		ON C.CHAL_ID = P.CHAL_ID
        JOIN PAYMENTS Y
        ON P.CHAL_ID = Y.GROUP_ID
		WHERE P.PARTICIPANT_ID = #{participantId}
		AND C.START_DATE > CURRENT_DATE
	</select>
	
	<select id="myEndChal" resultType="ChalVO" parameterType="ChalVO">
		SELECT C.CHAL_ID AS CHALID, C.SUB_CLASS AS SUBCLASS, C.FREQUENCY AS FREQUENCY, C.MEMBER_ID AS MEMBERID
				, C.CHAL_NAME AS CHALNAME, C.START_DATE AS STARTDATE, C.END_DATE AS ENDDATE, P.RESULT AS RESULT, P.RESULT_POINT AS RESULTPOINT, C.RECEIPT AS RECEIPT
		FROM CHALLENGES C JOIN PARTICIPANTS P
		ON C.CHAL_ID = P.CHAL_ID
		WHERE P.PARTICIPANT_ID = #{participantId} 
		AND CURRENT_DATE > C.END_DATE
		ORDER BY C.END_DATE DESC
	</select>
	
	<!-- 챌린지 조회 용들 ㅎ -->
	<select id="currentChals" resultType="ChalVO" parameterType="ChalVO">
		SELECT * FROM (SELECT ROWNUM RN, A.* FROM( 
		SELECT  C.CHAL_ID,
				C.CLASSES, 
				C.SUB_CLASS, 
				C.CHAL_NAME, 
				C.START_DATE, 
				C.END_DATE,
				M.FILE_ROUTE, 
				M.MEDIA_NAME
		  FROM CHALLENGES C 
		  JOIN MEDIA M
		    ON C.CHAL_ID = M.GROUP_ID
         WHERE M.SUB_GROUP = '썸네일'
         AND CURRENT_DATE BETWEEN C.START_DATE AND C.END_DATE
		 ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>
	
	<select id="beforeChals" resultType="ChalVO" parameterType="ChalVO">
		SELECT * FROM (SELECT ROWNUM RN, A.* FROM( SELECT C.CHAL_ID,
		C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE,
		M.FILE_ROUTE, M.MEDIA_NAME
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE M.SUB_GROUP = '썸네일'
        AND C.START_DATE > CURRENT_DATE
		ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>
		
	<select id="endChals" resultType="ChalVO" parameterType="ChalVO">
		SELECT * FROM (SELECT ROWNUM RN, A.* FROM( SELECT C.CHAL_ID,
		C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE,
		M.FILE_ROUTE, M.MEDIA_NAME
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE M.SUB_GROUP = '썸네일'
        AND CURRENT_DATE > C.END_DATE
		ORDER BY CHAL_ID DESC
        <![CDATA[
				)A WHERE ROWNUM <= #{last} ) WHERE RN >= #{first}
			]]>
	</select>
	
	
	<!-- 단건조회 -->
	<select id="getChal" resultType="CHALVO" parameterType="string">
		SELECT CHAL_ID, CLASSES
				, SUB_CLASS
				, NGO_NAME
				, START_DATE
				, END_DATE
				, CONTENTS
				, PROOF_CONTENT
				, DONATION_FEE
				, MEMBER_ID
				, TEAM_FEE
				, CHAL_NAME
				, RECEIPT
				, USERCNT
				,  TOTALDAYS(START_DATE, END_DATE, FREQUENCY) AS TOTAL
				, (TO_DATE(CURRENT_DATE) - TO_DATE(START_DATE)) as NOW_START
				, (TO_DATE(CURRENT_DATE) - TO_DATE(END_DATE)) as NOW_END
				, TOTALDAYS(CURRENT_DATE, END_DATE, FREQUENCY) AS DDAY
		FROM CHALLENGES
		WHERE CHAL_ID = #{chalId}
	</select>

	<!-- 챌리저스 등록 -->
	<insert id="inputChal" parameterType="ChalVO">
		<selectKey keyProperty="chalId" resultType="string" order="BEFORE">
			SELECT
			'CH'||LPAD(CHAL_SEQ.NEXTVAL,3,0) FROM DUAL
		</selectKey>
		INSERT into CHALLENGES
		VALUES(#{chalId}, #{classes}, #{subClass}, #{frequency}, #{ngoName}, #{startDate},
		#{endDate}, #{contents}, #{proofContent},
		#{donationFee}, #{memberId}, #{teamFee}, #{chalName}, #{receipt}, #{usercnt}, NULL)
	</insert>

	<!-- 수정 -->
	<update id="modifyChal" parameterType="ChalVO">
		UPDATE CHALLENGES
		SET CLASSES = #{classes},
		NGO_NAME = #{ngoName},
		START_DATE = #{startDate},
		END_DATE = #{endDate},
		CONTENTS = #{contents},
		PROOF_CONTENT =
		#{proofContent}
		WHERE CHAL_ID=#{chalId}
	</update>

	<!-- 기부금 업데이트 -->
	<update id="updateDonate" parameterType="ChalVO">
		UPDATE CHALLENGES
		SET DONATION_FEE = #{donationFee}
		WHERE CHAL_ID=#{chalId}
	</update>

	<!-- 챌린저스 취소-개최자만 가능함, 관리자랑 ㅋㅋ -->
	<delete id="delChal" parameterType="String">
		DELETE CHALLENGES
		WHERE CHAL_ID=#{chalId}
	</delete>
	
	<!-- 챌리저스 기부금 순위 조회 3등까지 -->
	<select id="donateRank" resultType="ChalVO">
		SELECT C.CHAL_ID , C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE, C.DONATION_FEE,
		M.FILE_ROUTE, M.MEDIA_NAME, ROWNUM
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE 3>=ROWNUM
        ORDER BY C.DONATION_FEE DESC
	</select>

	<!-- 관리자가 기부금 영수증 첨부 후 상태 업데이트 -->
	<update id="updateRecipt" parameterType="ChalVO">
		UPDATE CHALLENGES
		SET RECEIPT = #{receipt}
		WHERE CHAL_ID = #{chalId}
	</update>
	
	<!-- 관리자가 포인트 정산 후 상태 업데이트 -->
	<update id="updateSharePoint" parameterType="ChalVO">
		UPDATE CHALLENGES
		SET SHAREPOINT = #{sharepoint}
		WHERE CHAL_ID = #{chalId}
	</update>
	
	<!-- 썸네일만 가져오기 -->
	<select id="thumnail" resultType="MediaVO">
		SELECT * 
		FROM MEDIA
		WHERE GROUP_ID = #{GROUPID}
		AND SUB_GROUP = '썸네일'
	</select>
	
	<!-- 인증샷 예시만 가져오기 -->
	<select id="proofEx" resultType="MediaVO">
		SELECT * 
		FROM MEDIA
		WHERE GROUP_ID = #{GROUPID}
		AND SUB_GROUP = '인증예시'	
	</select>
	
	<!-- 완료, 팀전/개인전 여부로 목록보기위해 -->
	<select id="AdminEndChals" resultType="ChalVO">
		SELECT TOTALDAYS(START_DATE,END_DATE,FREQUENCY) TOTAL,
        CHAL_ID, CLASSES, SUB_CLASS, CHAL_NAME,NGO_NAME,
        TO_DATE(START_DATE,'YYYY/MM/DD')||'~'||TO_DATE(END_DATE,'YYYY/MM/DD') TERM, MEMBER_ID, TEAM_FEE, DONATION_FEE, RECEIPT
        FROM CHALLENGES
        WHERE CURRENT_DATE > END_DATE
        AND SUB_CLASS = #{subClass}
        ORDER BY END_DATE
	</select>

	<!-- paging용 -->
	<select id="chalCount"  resultType ="int" parameterType="ChalVO">
		SELECT  COUNT(CHAL_ID) AS total
		FROM CHALLENGES
		<include refid="condition"/>
	</select>
	
	<select id="cntNow"  resultType ="int" parameterType="ChalVO">
		SELECT  COUNT(CHAL_ID) AS total
		FROM CHALLENGES
		WHERE  CURRENT_DATE BETWEEN START_DATE AND END_DATE
	</select>
	
	<select id="cntEnd"  resultType ="int" parameterType="ChalVO">
		SELECT  COUNT(CHAL_ID) AS total
		FROM CHALLENGES
		WHERE   CURRENT_DATE > START_DATE
	</select>
	
	<select id="cntYet"  resultType ="int" parameterType="ChalVO">
		SELECT  COUNT(CHAL_ID) AS total
		FROM CHALLENGES
		WHERE  START_DATE > CURRENT_DATE
	</select>
	
	
	<!--  관리자 포인트 정산용 - 팀전  -->
	<update id="updateTeamPoint" parameterType="ParticipantVO">
		UPDATE MEMBERS
		SET POINT = POINT + #{thatPoint}
		WHERE MEMBER_ID IN (SELECT PARTICIPANT_ID
							FROM PARTICIPANTS
							WHERE TEAM = #{team}
							AND CHAL_ID = #{chalId})	
	</update>
	
	<!-- 개인전 포인트 업데이트 -->
	<update id="updateMemberPoint" parameterType="ParticipantVO">
		UPDATE MEMBERS
		SET POINT = POINT + #{thatPoint}
		WHERE MEMBER_ID = #{memberId}
	</update> 
	
	<!-- 시작이 얼마 안남은 챌린지 리스트 3개 -->
	<select id = "ddayStartRank" resultType="ChalVO">
		SELECT C.CHAL_ID , C.CLASSES, C.SUB_CLASS, C.CHAL_NAME, C.START_DATE, C.END_DATE, C.DONATION_FEE,
		M.FILE_ROUTE, M.MEDIA_NAME, TO_DATE(CURRENT_DATE)-TO_DATE(C.START_DATE) AS DDAY, ROWNUM
		FROM CHALLENGES C JOIN MEDIA M
		ON C.CHAL_ID = M.GROUP_ID
        WHERE 4>=ROWNUM
        AND SUB_GROUP = '썸네일'
        AND TO_DATE(CURRENT_DATE)-TO_DATE(C.START_DATE) >=0
        ORDER BY DDAY
    </select>
    
    
    <select id="adminSearchChals" resultType = "ChalVO">
    	SELECT TOTALDAYS(START_DATE,END_DATE,FREQUENCY) TOTAL,
        CHAL_ID, CLASSES, SUB_CLASS, CHAL_NAME,NGO_NAME,
        TO_DATE(START_DATE,'YYYY/MM/DD')||'~'||TO_DATE(END_DATE,'YYYY/MM/DD') TERM, MEMBER_ID, TEAM_FEE, DONATION_FEE, RECEIPT
        FROM CHALLENGES
        WHERE CURRENT_DATE > END_DATE
        AND SUB_CLASS = #{subClass}
        	<if test="vo.receipt != null">
				AND RECEIPT = #{vo.receipt}
			</if>
			<if test="vo.sharepoint != null">
				AND SHAREPOINT = #{vo.sharepoint}
			</if>
			<if test="startDate != '' and endDate!=''">			
				<![CDATA[AND TO_CHAR(START_DATE,'yyyy-MM-dd')>=#{startDate} AND TO_CHAR(END_DATE,'yyyy-MM-dd')<=#{endDate}]]>
			</if>
		ORDER BY END_DATE DESC
    </select>
</mapper>