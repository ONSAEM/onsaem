<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.onsaem.web.blog.mapper.BlogWriteMapper">
 	<!-- 전체 조회 -->
 	<select id="getBlogList" resultType="BlogWriteVO" parameterType="BlogWriteVO">
 		SELECT *
 		FROM BLOG_WRITES
 	</select>
 	<!-- 단건 조회 -->
 	<select id="getBlog" resultType="BlogWriteVO" parameterType="String">
		SELECT *
		FROM BLOG_WRITES B, CATEGORIES C
		WHERE B.CATEGORY_ID = C.CATEGORY_ID
		AND WRITE_ID = #{writeId}
 	</select>
 	<!-- 블로그 단건 조회 -->
 	<select id="myBlog" resultType="BlogWriteVO" parameterType="String">
		SELECT *
		FROM BLOG_WRITES
		WHERE BLOG_ID = #{blogId}
 	</select>
 	<!-- 글 등록 -->
 	<insert id="blogInsert" parameterType="blogWriteVO">
 		<selectKey keyProperty="writeId" resultType="String" order="BEFORE">
 			select 'BW'||lpad(blog_seq.nextval,3,0) from dual
 		</selectKey>
 		INSERT INTO BLOG_WRITES( WRITE_ID,
								BLOG_ID,
								WRITE_TITLE,
								SUBTITLE,
								CATEGORY_ID,
								PUBLIC_SCOPE,
								BLOG_WRITE,
								WRITER_NICKNAME,
								CNT,
								LIKE_NUMBER,
								WRITE_DATE )
		VALUES (#{writeId},
				#{blogId},	
				#{writeTitle},
				#{subTitle},
				#{categoryId},
				#{publicScope},
				#{blogWrite},
				#{writerNickname},
				0,
				0,
				current_date)
 	</insert>
 	
 	<!-- 좋아요 추가 -->
 	<insert id="addBlogLike" parameterType="LikeVO">
 		<selectKey keyProperty="likeId" resultType="String" order="BEFORE">
 			SELECT 'LK'||LPAD(LK_SEQ.NEXTVAL,3,0) FROM DUAL
 		</selectKey>
 		INSERT INTO (LIKE_ID,
					 MEMBER_ID,
					 GROUP_ID,
					 GROUPS,
					 INSERT_DATE)
		VALUES (#{likeId}, <!-- 시퀀스 -->
				#{memberId}, <!-- 누른 사람의 아이디 -->
				#{groupId}, <!-- 글 번호 -->
				"블로그",
				current_date)
 	</insert>
 	
 	
 	<!-- 좋아요 삭제 -->
 	
 	<!-- 그룹 아이디가 같은 경우에만 카운트하기(한 게시글에서 좋아요 수 조회) -->
 	
 	
 	<!-- 글 수정 -->
 	<update id="blogUpdate" parameterType="blogWriteVO">
 		UPDATE BLOG_WRITES
 			SET WRITE_TITLE = #{writeTitle},
 			SET SUBTITLE = #{subTitle},
 			SET CATEGORY_ID = #{categoryId},
 			SET PUBLIC_SCOPE = #{publicScope},
 			SET BLOG_WRITE = #{blogWrite},
 			SET WRITE_DATE = CURRENT_DATE
 		where BLOG_ID = #{blogId}
 		and WRITE_ID = #{writeId}
 	</update>
 	<!-- 글 삭제 -->
 	<delete id="blogDelete" parameterType="String">
 		delete from blog_writes
 		where blog_id = #{blogId}
 		and write_id = #{wirteId}
 	</delete>
 	
 	
 </mapper>